name: CI

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
  workflow_dispatch:
  {% if test_pre_release -%}
  schedule:
    # run every week (for --pre release tests)
    - cron: "0 0 * * 0"
  {%- endif %}

{% raw -%}
# cancel in-progress runs that use the same workflow and branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
{%- endraw %}

jobs:
{%- if mode != 'simple' %}
  check-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx run check-manifest
{% endif %}{% raw %}
  test:
    name: ${{ matrix.platform }} (${{ matrix.python-version }})
    runs-on: ${{ matrix.platform }}{% endraw %}
    {%- if test_pre_release -%}
    env:
      UV_PRERELEASE: {% raw %}${{ github.event_name == 'schedule' && 'allow' || '' }}{% endraw %}
    {%- endif %}
    strategy:
      fail-fast: false
      matrix:
        python-version: [{%- if minimum_python <= 9 %}"3.9", {% endif -%}
          {% if minimum_python <= 10 %}"3.10", {% endif -%}
          {% if minimum_python <= 11 %}"3.11", {% endif -%}
          {% if minimum_python <= 12 %}"3.12",  {% endif -%}
          {% if minimum_python <= 13 %}"3.13"{% endif %}{% raw %}]
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: Install Dependencies
        run: uv sync --no-dev --group test

      - name: 🧪 Run Tests
        run: uv run pytest --cov --cov-report=xml --cov-report=term-missing
      {%- if test_pre_release %}

      # If something goes wrong with --pre tests, we can open an issue in the repo
      - name: 📝 Report --pre Failures
        if: failure() && github.event_name == 'schedule'
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PLATFORM: ${{ matrix.platform }}
          PYTHON: ${{ matrix.python-version }}
          RUN_ID: ${{ github.run_id }}
          TITLE: "[test-bot] pip install --pre is failing"
        with:
          filename: .github/TEST_FAIL_TEMPLATE.md
          update_existing: true
      {%- endif %}{% raw %}

      - name: Coverage
        uses: codecov/codecov-action@v5

  build-and-inspect-package:
    name: Build & inspect package.
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: hynek/build-and-inspect-python-package@v2

  upload-to-pypi:
    name: Upload package to PyPI
    needs: build-and-inspect-package
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing on PyPi
      # see https://docs.pypi.org/trusted-publishers/
      id-token: write
      # This permission allows writing releases
      contents: write

    steps:
      - name: Download built artifact to dist/
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - name: 🚢 Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
      - uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: './dist/*'
{% endraw %}

  
